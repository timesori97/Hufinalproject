<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="www.silver.dao.IF_writeDAO">
	<insert id="insertone" parameterType="www.silver.vo.BoardVO"
		useGeneratedKeys="true" keyProperty="postNum">
		INSERT INTO board (title, content,
		writer, programmingLanguage)
		VALUES (#{title}, #{content}, #{writer}, #{programmingLanguage})
	</insert>

	<insert id="board_attach" parameterType="map"
		useGeneratedKeys="true" keyProperty="id">
		INSERT INTO board_attach (postNum,
		filename, createdAt)
		VALUES (#{postNum}, #{filename}, default)
	</insert>

	<select id="selectall" resultType="www.silver.vo.BoardVO">
		SELECT postNum, writer, title,
		content, createdAt, views
		FROM board
		ORDER BY postNum DESC
	</select>

	<select id="pagingList" parameterType="java.util.HashMap"
		resultType="www.silver.vo.BoardVO">
		SELECT *
		FROM board
		ORDER BY postNum DESC
		LIMIT #{start},
		#{limit}
	</select>

	<select id="boardCount" resultType="int">
		SELECT COUNT(*) FROM board
	</select>

	<select id="selectOne" resultType="www.silver.vo.BoardVO"
		parameterType="Long">
		select * from board where postNum = #{postNum}
	</select>

	<select id="getAttach" resultType="String" parameterType="Long">
		select
		filename from board_attach where postNum = #{postNum}
	</select>

	<delete id="deleteone" parameterType="Long">
		delete from board where
		postNum = #{postNum}
	</delete>

	<update id="modifyone" parameterType="www.silver.vo.BoardVO">
		UPDATE board
		SET
		title =
		#{title},
		content = #{content},
		programmingLanguage = #{programmingLanguage}
		WHERE postNum = #{postNum}
	</update>

	<delete id="deleteAttach" parameterType="Long">
		delete from board_attach
		where postNum = #{postNum}
	</delete>

	<update id="viewCount" parameterType="www.silver.vo.BoardVO">
		update board set views =
		views + 1 where postNum = #{postNum}
	</update>

	<insert id="insertComment"
		parameterType="www.silver.vo.CommentVO" useGeneratedKeys="true"
		keyProperty="commentId">
		INSERT INTO comment (
		postNum,
		userId,
		content,
		parentCommentId,
		depth,
		likes,
		isDeleted
		) VALUES (
		#{postNum},
		#{userId},
		#{content},
		#{parentCommentId},
		#{depth},
		#{likes},
		#{isDeleted}

		)
	</insert>

	<select id="selectAllComment" parameterType="Long"
        resultType="www.silver.vo.CommentVO">
    SELECT commentId, postNum, userId, content, createdAt, parentCommentId
    FROM comment
    WHERE postNum = #{postNum}
    ORDER BY createdAt ASC
</select>


	<delete id="deleteComment" parameterType="map">
		DELETE FROM comment
		WHERE commentId = #{commentId}
		AND userId = #{userId}
	</delete>

	<update id="updateComment" parameterType="map">
		UPDATE comment
		SET
		content = #{content}
		WHERE commentId = #{commentId}
		AND postNum =
		#{postNum}
	</update>

	<!-- Retrieve a comment by its ID -->
	<select id="getCommentById" parameterType="int"
		resultType="www.silver.vo.CommentVO">
		SELECT commentId, postNum, userId, content,
		parentCommentId, depth, likes,
		isDeleted, createdAt, updateAt
		FROM
		comment
		WHERE commentId = #{parentCommentId} AND isDeleted = FALSE
	</select>

	<!-- Insert a new comment reply -->
	<insert id="addCommentReply"
		parameterType="www.silver.vo.CommentVO">
		INSERT INTO comment (postNum, userId, content,
		parentCommentId, depth,
		likes, isDeleted)
		VALUES (#{postNum}, #{userId},
		#{content}, #{parentCommentId}, #{depth}, 0,
		FALSE)
	</insert>
	
	<update id="updateReplyComment" parameterType="map">
		UPDATE comment
		SET content = #{content}
		WHERE commentId = #{commentId}
		AND postNum = #{postNum}
		AND depth > 0
	</update>

	



</mapper>